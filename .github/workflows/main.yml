name: 'Baidu Tieba Auto Sign'

on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 21 * * *'
  workflow_dispatch:
 
jobs:
  sign:
    runs-on: ubuntu-latest
    steps:
      - name: '检测代码'
        uses: actions/checkout@v3

      # --- START: 最终修正 ---
      # 步骤 1: 首先尝试恢复 Python 环境缓存
      - name: '缓存Python环境'
        id: cache-python # 依然给它一个ID
        uses: actions/cache@v4
        with:
          # 我们需要指定一个 setup-python 会检查的、稳定的路径
          path: /opt/hostedtoolcache/Python
          # 键保持不变，但为了简单和稳定，可以只用版本号
          key: ${{ runner.os }}-python-3.8
          # 恢复键也相应简化
          restore-keys: |
            ${{ runner.os }}-python-

      # 步骤 2: 现在才运行初始化。它会检查上面恢复的缓存路径
      - name: '初始化Python'
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      # --- END: 最终修正 ---

      # Pip 缓存部分是完美的，保持原样
      - name: '缓存Pip依赖'
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: '安装依赖包'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: '开始签到'
        env:
          BDUSS: ${{ secrets.BDUSS }}
        run: python main.py
